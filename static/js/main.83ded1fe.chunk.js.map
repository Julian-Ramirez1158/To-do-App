{"version":3,"sources":["check-circle-regular.svg","Todos.js","AddTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todos","todos","deleteTodo","todoList","length","map","todo","className","content","src","checkCircle","onClick","id","alt","AddTodo","state","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","addTodo","onSubmit","this","type","onChange","required","Component","App","filter","Math","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,MAA0B,iDC2B1BA,EAvBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WAEbC,EAAWF,EAAMG,OACnBH,EAAMI,KAAI,SAAAC,GACN,OACI,sBAAKC,UAAU,kBAAf,UACI,sBAAMA,UAAU,YAAhB,SAA8BD,EAAKE,UACnC,qBAAKC,IAAKC,EAAaC,QAAS,WAAOT,EAAWI,EAAKM,KAAMC,IAAI,oBAAoBN,UAAU,iBAF7DD,EAAKM,OAOnD,qBAAKL,UAAU,2BAAf,SACI,sBAAMK,GAAG,WAAWL,UAAU,YAA9B,mDAGR,OACI,qBAAKA,UAAU,mBAAf,SACKJ,KCWEW,E,4MA9BXC,MAAQ,CACJP,QAAS,I,EAGbQ,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVV,QAASS,EAAEE,OAAOC,S,EAG1BC,aAAe,SAACJ,GACZA,EAAEK,iBACF,EAAKC,MAAMC,QAAQ,EAAKT,OAExB,EAAKG,SAAS,CACVV,QAAS,M,uDAIb,OACI,8BACI,uBAAMD,UAAU,OAAOkB,SAAUC,KAAKL,aAAtC,UACI,uBAAOd,UAAU,mBAAjB,yCACA,uBAAOA,UAAU,aAAaoB,KAAK,OAAOC,SAAUF,KAAKV,aAAcI,MAAOM,KAAKX,MAAMP,QAASqB,UAAQ,IAC1G,wBAAQtB,UAAU,yCAAyCoB,KAAK,SAAhE,6B,GAxBEG,aCqCPC,E,4MAlCbhB,MAAQ,CACNd,MAAO,CACL,CAACW,GAAI,EAAGJ,QAAS,mBACjB,CAACI,GAAI,EAAGJ,QAAS,iBACjB,CAACI,GAAI,EAAGJ,QAAS,uB,EAGrBN,WAAa,SAACU,GACZ,IAAMX,EAAQ,EAAKc,MAAMd,MAAM+B,QAAO,SAAA1B,GACpC,OAAOA,EAAKM,KAAOA,KAErB,EAAKM,SAAS,CACZjB,W,EAGJuB,QAAU,SAAClB,GACTA,EAAKM,GAAKqB,KAAKC,SACf,IAAIjC,EAAK,sBAAO,EAAKc,MAAMd,OAAlB,CAAyBK,IAClC,EAAKY,SAAS,CACZjB,MAAOA,K,uDAIT,OACE,sBAAKM,UAAU,qBAAf,UACE,oBAAIA,UAAU,2BAAd,wBACA,oBAAIA,UAAU,iCAAd,uEACA,cAAC,EAAD,CAAON,MAAQyB,KAAKX,MAAMd,MAAQC,WAAYwB,KAAKxB,aACnD,cAAC,EAAD,CAASsB,QAASE,KAAKF,iB,GA7BbM,aCQHK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.83ded1fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/check-circle-regular.f1ff1dd8.svg\";","import React from 'react'\r\nimport checkCircle from './check-circle-regular.svg'\r\n\r\n\r\nconst Todos = ({todos, deleteTodo}) => {\r\n\r\n    const todoList = todos.length ? (\r\n        todos.map(todo => {\r\n            return (\r\n                <div className=\"collection-item\" key={todo.id}>\r\n                    <span className=\"list-item\" >{todo.content}</span>\r\n                    <img src={checkCircle} onClick={() => {deleteTodo(todo.id)}} alt=\"Check packed item\" className=\"check-icon\"></img>\r\n                </div>\r\n            )\r\n        })\r\n    ) : (\r\n        <div className=\"collection-item complete\">\r\n            <span id=\"complete\" className=\"list-item\">You have nothing left to pack, yay!</span>\r\n        </div>\r\n    )\r\n    return (\r\n        <div className=\"todos collection\">\r\n            {todoList}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import React, { Component } from 'react'\r\n\r\nclass AddTodo extends Component {\r\n    state = {\r\n        content: ''\r\n\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state);\r\n        // This clears the input field after submission\r\n        this.setState({\r\n            content: ''\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"Label white-text\">What do you need to pack? :</label>\r\n                    <input className=\"white-text\" type=\"text\" onChange={this.handleChange} value={this.state.content} required/>\r\n                    <button className=\"btn waves-effect waves-light z-depth-5\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTodo","import React, { Component } from 'react';\nimport Todos from './Todos'\nimport AddTodo from './AddTodo'\n\nclass App extends Component {\n  state = {\n    todos: [\n      {id: 1, content: 'Pack toothbrush'},\n      {id: 2, content: 'Pack hair gel'},\n      {id: 3, content: 'Pack dress shirts'},\n    ]\n  }\n  deleteTodo = (id) => {\n    const todos = this.state.todos.filter(todo => {\n      return todo.id !== id\n    })\n    this.setState({\n      todos\n    })\n  }\n  addTodo = (todo) => {\n    todo.id = Math.random()\n    let todos = [...this.state.todos, todo]\n    this.setState({\n      todos: todos\n    })\n  }\n  render() {\n    return (\n      <div className=\"todo-app container\">\n        <h1 className=\"Header center white-text\">Travel Bag</h1>\n        <h6 className=\"Instructions center white-text\">Add items you need to pack, and check them off as you go!</h6>\n        <Todos todos={ this.state.todos } deleteTodo={this.deleteTodo}/>\n        <AddTodo addTodo={this.addTodo}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}